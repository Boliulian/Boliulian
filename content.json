{"meta":{"title":"榴莲的数字花园","subtitle":"观察->理解->参与","description":"","author":"Boliulian","url":"https://boliulian.github.io/Boliulian","root":"/Boliulian/"},"pages":[{"title":"","date":"2024-07-04T09:48:35.000Z","updated":"2024-07-04T10:11:01.213Z","comments":true,"path":"about/index.html","permalink":"https://boliulian.github.io/Boliulian/about/index.html","excerpt":"","text":""},{"title":"gallery","date":"2024-07-15T14:27:57.000Z","updated":"2024-07-15T14:27:53.845Z","comments":true,"path":"gallery/index.html","permalink":"https://boliulian.github.io/Boliulian/gallery/index.html","excerpt":"","text":""},{"title":"categories","date":"2024-07-04T09:51:57.000Z","updated":"2024-08-15T05:11:27.421Z","comments":true,"path":"categories/index.html","permalink":"https://boliulian.github.io/Boliulian/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2024-07-04T09:51:46.000Z","updated":"2024-07-04T09:55:59.374Z","comments":true,"path":"tags/index.html","permalink":"https://boliulian.github.io/Boliulian/tags/index.html","excerpt":"","text":""},{"title":"愿望清单","date":"2024-07-05T14:43:08.000Z","updated":"2024-07-06T09:35:41.286Z","comments":true,"path":"wishes/index.html","permalink":"https://boliulian.github.io/Boliulian/wishes/index.html","excerpt":"","text":"完成一个可分享的数字花园2024-07-01：hexo+github部署成功 画完一本速写本 学会延迟满足（信息流点收藏再集中看） 告别排骨胸 刷力扣20题 用c++开发一个完整的小项目2024-07-05：开始做力扣 语言逻辑分析和比较 文献速读视觉笔记SOP 用NAS私有云搭建本地数据库（硬件、软件） 做出一顿饭 考驾照 有自己的收入 自由职业者（自由职业指的是产出不确定） 跑通一个生意"}],"posts":[{"title":"去看了M27","slug":"去看了M27","date":"2024-08-17T09:24:00.000Z","updated":"2024-08-17T11:42:16.280Z","comments":true,"path":"2024/08/17/去看了M27/","permalink":"https://boliulian.github.io/Boliulian/2024/08/17/%E5%8E%BB%E7%9C%8B%E4%BA%86M27/","excerpt":"临时起意买了二十分钟后的场次结果没看清是国语，不过不影响。","text":"临时起意买了二十分钟后的场次结果没看清是国语，不过不影响。 真的只有彩蛋是最震撼的…黑羽和工藤同血同源，那怎么没人认一下中森和毛利的亲呢？ 出场人物太多，很多线索刚出现完成工具使命就回收了，信息收集全靠人脉和巧合，情绪上也没有紧张的点，反正一堆人排着队救柯南呢（官方自己吐槽了）。唯一还算意外的是宝物的真相，让整个事件悲凉了不少。 飞机上对决更是莫名其妙的，拿武士刀打架得有M7那种烈火和死别的氛围才叫剑道啊！ 看到中森受伤那会儿以为有什么大事要发生，结果作用只是传句话来跟园子连上（感觉是不想编情节了直接暴力连接），然后顺便让青子出来露个脸，还贡献了一个预告欺诈镜头。 回过头来竟想不起小柯有什么亮眼表现，总不能是滑板走钢丝吧？ 本来还想补个原版，去年起码还有小糖，今年想想还是算了。\\","categories":[],"tags":[{"name":"日常","slug":"日常","permalink":"https://boliulian.github.io/Boliulian/tags/%E6%97%A5%E5%B8%B8/"}]},{"title":"入坑记录 お笑い","slug":"入坑记录 お笑い","date":"2024-08-15T08:00:02.000Z","updated":"2024-08-17T10:34:00.949Z","comments":true,"path":"2024/08/15/入坑记录 お笑い/","permalink":"https://boliulian.github.io/Boliulian/2024/08/15/%E5%85%A5%E5%9D%91%E8%AE%B0%E5%BD%95%20%E3%81%8A%E7%AC%91%E3%81%84/","excerpt":"欢迎来到一个拥有巧克力和笑い的和平星球","text":"欢迎来到一个拥有巧克力和笑い的和平星球 编辑记录 2024-08-15 提交blog、更新至当前日期 2024-03-07 创建文件、更新至当前日期 2024-01-23 入坑 相方爱是巧克力和规划师：微博正文两个人都很难搞哦：微博正文巧星同步合集：微博正文长田桑的拇指：微博正文保健室物语：微博正文预告欺诈，但说明贴了两次：微博正文这次防身术教学拍得保守了：微博正文学pa：微博正文理想外景是巧星+豹+安村：微博正文从一些油管mad中摄取早期碎片：微博正文松尾儿子管长田也叫爸爸：微博正文才不和向井打招呼：微博正文想和长田桑一起玩下品小游戏：微博正文情人节是结婚纪念日：微博正文冷场了转头小声求救：微博正文相方即使死也会死得很美丽：微博正文打牌贴贴：微博正文二人羽织：微博正文摩托车后座：微博正文糖果色的cm摄影：微博正文庆功贴贴：微博正文好吃的东西也想让长田桑尝尝：微博正文27结束sns发了同一张照片：微博正文恋爱大师长田桑两句话哄好对象：微博正文ig机场匂わせ：微博正文 亲友爱おさむか3shot（from 长田ig）：微博正文おさむか2shot（from 长田ig）：微博正文理想是有10个向井：微博正文ig版聊隔空约饭：微博正文21年新年ig贺文，巧星三人组：微博正文向井被长田拯救的小故事：微博正文不明白高尔夫的乐趣：微博正文巧设吃akakara带向井出场：微博正文和向井来就是断背山了：微博正文三角关系重出江湖：微博正文我也想要一个能聊academic话题的友人：微博正文好痛苦，想要向井：微博正文见到向井什么都好了：微博正文长田有只有在向井面前才会展现的笑容：微博正文就是靠卖才吃上饭的：微博正文录完壁去akakara约会：微博正文穿着koc定制t去la：微博正文调侃向井像大学生谈恋爱：微博正文怎么会有人说向井比家庭重要的：微博正文去肉fes被路人目击：微博正文下班以后是和向井的二人世界​​：微博正文上班with巧空奴下班with向井：微博正文巧星+向井更美味哦：微博正文森下的告状：微博正文感觉是在酒店开房：微博正文从最初就很爱，见一次就记录一次：微博正文输入法不会骗人：微博正文热恋小情侣：微博正文在一起时间太多了被同事议论了：微博正文都在养金鱼：微博正文 长田单人长田模仿猫meme：微博正文长田翻包翻出针线盒：微博正文午南放下刘海你谁：微博正文21年1月号JUNON：微博正文迷你长田：微博正文对恶旅充满怨念：微博正文突然开始承认自己是帅哥：微博正文巧空奴+shiori聚餐，端水大师长田：微博正文长田ipad出走事件：微博正文是不是营业路线变化了：微博正文议会西装好帅哦：微博正文会无意识萌萌：微博正文黑长直女装被白男夸了：微博正文在神业走池面路线：微博正文想去做射击运动员：微博正文 我评巧星和喜送奴的构成模式：微博正文豹的构成模式：微博正文长谷川talk力好弱：微博正文美炎发展意图：微博正文 微博正文控比的含义：微博正文14koc决赛只是内部传说：微博正文三个月了我怎么还在热恋：微博正文WEGO乱搭竟颇有sense：微博正文到了这个高度还几乎100%以控比进行活动的好像只有巧星了：微博正文松尾的美学是对称，长田的是非对称：微博正文支持osd进军アーティスト界：微博正文感觉长田散发着一股不想干了的氛围：微博正文对和人打交道的外景很苦手的控比：微博正文迪士尼好像比电视台牛逼：微博正文shiori对巧空奴的偏爱好明显：微博正文アーティスト長田稳步推进：微博正文不负责面包体猜测isfp&#x2F;estj：微博正文长田竟然也腰疼：微博正文在二十几岁遇到一群共同追梦的人好幸福：微博正文这架势是要减到22年的程度：微博正文长田idea速转巧设企划：微博正文是世界上最了解对方的人但不是朋友：微博正文工装才是真正的工作服吧：微博正文大概巧星之于长田的命运感会更强烈：微博正文长田老师生活艺术家：微博正文兔鸭狠狠代：微博正文我的第一次FA：微博正文 其他巧星有壁break之路：微博正文喜送奴短剧合集：微博正文巧星短剧合集：微博正文10期和11期怎么全是怪人，baking好好笑：微博正文存个お笑い饭日本游攻略：微博正文 腾讯文档 ​​​有些人在吉本中庭大喊大叫被隔壁爱抖露收音进去了：微博正文2024巧空奴单独行程：微博正文当搞笑艺人组合名成为超能力：微博正文オリラジ学园真好看：微博正文我的应募怎么中了：微博正文2024巧星单独剧照：微博正文shiori酱也在嗑：微博正文松尾的x失踪了几天但又回来了：微博正文午南浴衣周，夏天的感觉：微博正文20年柯南客串配音，是嫌犯里混得最差的一对兄弟：微博正文","categories":[],"tags":[{"name":"チョコプラ","slug":"チョコプラ","permalink":"https://boliulian.github.io/Boliulian/tags/%E3%83%81%E3%83%A7%E3%82%B3%E3%83%97%E3%83%A9/"},{"name":"归档","slug":"归档","permalink":"https://boliulian.github.io/Boliulian/tags/%E5%BD%92%E6%A1%A3/"}]},{"title":"Hexo Next 配置记录","slug":"Hexo Next 配置记录","date":"2024-07-12T09:22:04.000Z","updated":"2024-08-17T11:42:16.278Z","comments":true,"path":"2024/07/12/Hexo Next 配置记录/","permalink":"https://boliulian.github.io/Boliulian/2024/07/12/Hexo%20Next%20%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/","excerpt":"如果你也有兴趣配置一个这样的博客： Hexo+github部署个人博客的流程","text":"如果你也有兴趣配置一个这样的博客： Hexo+github部署个人博客的流程 Markdown gallery一个解决方案：https://felixhayashi.github.io/ReadmeGalleryCreatorForGitHub/ 渲染latex公式next的config文件里，有mathjax属性，改成true，然后在需要latex渲染的页面前加上mathjax:true 页面文章部分显示在需要开始隐藏的段落前加上： 1&lt;!--more--&gt; 解决静态页面和部署显示不一致的问题先hexo clean 清除缓存，再发布 部分文章加密安装插件： 1npm install hero-blog-encrypt 配置文件添加字段： 12encrypt: true 需要加密的文档属性添加： 1password:xxx 文章搜索需要安装插件 1npm install hexo-generator-searchdb --save 然后更改local_search为true 字数统计1npm install hexo-wordcount --save 访客统计更改busuanzi_count为true 其他可以参考知乎上的一个next配置过程https://zhuanlan.zhihu.com/p/129644138","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://boliulian.github.io/Boliulian/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://boliulian.github.io/Boliulian/tags/github/"}]},{"title":"力扣题体验","slug":"力扣题体验","date":"2024-07-05T10:54:46.000Z","updated":"2024-08-17T10:34:00.949Z","comments":true,"path":"2024/07/05/力扣题体验/","permalink":"https://boliulian.github.io/Boliulian/2024/07/05/%E5%8A%9B%E6%89%A3%E9%A2%98%E4%BD%93%E9%AA%8C/","excerpt":"https://leetcode.cn/ 回文数（2024.07.12）我想的笨办法，数字转成字符串，然后和反转后的字符串比较，都用现成的函数。","text":"https://leetcode.cn/ 回文数（2024.07.12）我想的笨办法，数字转成字符串，然后和反转后的字符串比较，都用现成的函数。 1234567891011121314151617181920212223242526class Solution &#123;public: bool isPalindrome(int x) &#123; int p; string s, v; if (x &lt; INT_MIN || x &gt; INT_MAX) return false; if (x &lt; 0 &amp;&amp; x &gt;= INT_MIN) &#123; return false; &#125; while (x) &#123; p = x % 10; s.push_back(&#x27;0&#x27; + p); x = x / 10; &#125; // s = to_string(x) 即可 v = s; reverse(v.begin(), v.end()); if (s == v) return true; else return false; &#125;&#125;; 双指针法 123456789101112131415//第一中转化成string,双指针匹配是否对称class Solution &#123;public: bool isPalindrome(int x) &#123; if (x &lt; 0) return false; string s = to_string(x); int l = 0, r = s.size() - 1; while (l &lt; r) &#123; if (s[l] == s[r]) ++l, --r; else return false; &#125; return true; &#125;&#125;; Z字形变换（2024.07.09）思路一开始就错了，试图找行和列的关系，但其实只需要考虑行一个维度就行了。1.matrix[i]+&#x3D;c;2.i +&#x3D;flag;3.flag&#x3D;-flag; 1234567891011121314151617181920212223242526272829303132class Solution&#123;public: string convert(string s, int numRows) &#123; vector&lt;string&gt; matrix(numRows); if (numRows == 1) return s; // 特殊情况处理 int count = 0; int i = 0; // 当前行 int flag = 1; while (count &lt; s.size()) &#123; matrix[i] += s[count]; // 在当前行添加字符 if (i == 0 || i == numRows - 1) &#123; // 到达顶行或底行时改变方向 flag = -flag; &#125; i += flag // 根据方向调整行索引 count++; &#125; string ans; for (const string &amp;row : matrix) &#123; ans += row; &#125; return ans; &#125;&#125;; 整数反转（2024.07.07）道理上不难，难点在要考虑int32溢出的问题可处理的数字边界是$-2^{31}$到$2^{31}-1$所以得到的数字要判断会不会溢出（直接用边界值去判断 我的解法：先用一个数组把数字都存了，再计算结果 1234567891011121314151617181920212223242526class Solution &#123;public: int reverse(int x) &#123; int tmp=x,p; vector&lt;int&gt; num; int sign=1; if (x&lt;0 &amp;&amp; x&gt;-2147483647) sign=-1;tmp=tmp*sign; if (x&lt;-2147483647) tmp=0; while (tmp&gt;0)&#123; p=tmp%10; // 最后一位数字 num.push_back(p); tmp=tmp/10; &#125; int result=0, c=num.size(), check, tmpsum; for (int j=0;j&lt;num.size();j++)&#123; if (result+num[j]*pow(10,c-j-1) &lt; 2147483647-1) result=result+num[j]*pow(10,c-j-1); else &#123;result=0;break;&#125; &#125; return result*sign; &#125;&#125;; 官方解答：INT_MIN和INT_MAX是预设值最后计算的数字如果小于INT_MIN/10，则会溢出 1234567891011121314class Solution &#123;public: int reverse(int x) &#123; int p,ans=0; while (x)&#123; p=x%10; // 最后一位数字 if (ans &lt; INT_MIN / 10 || ans &gt; INT_MAX/10) return 0; ans=x/10+p; x=x/10; &#125; return ans; &#125;&#125;; 无重复的最长字符串（2024.07.06）滑动窗口，左下标i，右下标j（界限为右边界），提取窗口内子串用str.substr(i,j-i)查找字符串中的某字符用str.find （找不到返回-1，一开始被gpt骗了，说是返回npos发现字符重复后，清除重复字符以前的所有字符注意字符串string和字符char不是同一种格式 1234567891011121314151617181920class Solution &#123;public: int lengthOfLongestSubstring(string s) &#123; int i=0; int result=0; string str; for (int j=0; j&lt; s.length();j++)&#123; str=s.substr(i,j-i); int pos=str.find(s[j]); if (pos != -1)&#123; str.erase(0,pos+1); i=i+pos+1; &#125; str +=s[j]; result=max(result,j-i+1); &#125; return result; &#125;&#125;; 好不喜欢字符串…就是一种绝对能弄出来但不知道怎么更快的感觉我还是喜欢不知道能不能弄出来，想大于做的任务 两数相加（2024.07.06）1234567891011#include &lt;iostream&gt;using namespace std;// 单向链表定义 struct ListNode &#123; int val; ListNode *next; ListNode() : val(0), next(nullptr) &#123;&#125; ListNode(int x) : val(x), next(nullptr) &#123;&#125; ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;&#125;; ListNode是结构体对象，节点存储的是指向下一节点的指针和节点的值。l1,l2分别是指向链表头结点的指针所以，头节点的值是l1-&gt;val，指向下一个节点的指针是l1-&gt;next引入滑动指针遍历整个链表，当前位数的值相加，超过十进位。滑动指针运算前需要判断非空! 123456789101112131415161718192021222324252627282930class Solution &#123;public: ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) &#123; ListNode* p=l1; ListNode* q=l2; ListNode* head=new ListNode(0); ListNode* current=head; ListNode* l3; int N1=0,N2=0,n1=0,n2=0,extra=0,x,y; while (p!=nullptr || q!=nullptr)&#123; if (p!=nullptr) x=p-&gt;val; else x=0; if (q!=nullptr) y=q-&gt;val; else y=0; int sum=x+y+extra; extra=sum/10; current-&gt;next = new ListNode(sum%10); current=current-&gt;next; if (p != nullptr) p = p-&gt;next; if (q != nullptr) q = q-&gt;next; &#125; if (extra &gt; 0) &#123; current-&gt;next = new ListNode(extra); &#125; return l3=head-&gt;next; &#125; &#125;; 两数之和（2024.07.05）我的答案，暴力循环： 123456789101112131415class Solution &#123;public: vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) &#123; int n = nums.size(); for (int i = 0; i &lt; n; ++i) &#123; for (int j = i + 1; j &lt; n; ++j) &#123; if (nums[i] + nums[j] == target) &#123; return &#123;i, j&#125;; &#125; &#125; &#125; return &#123;&#125;; &#125;&#125;; vector&lt;int&gt; 动态数组++i是前置递增，i++是后置递增 官方答案，用到概念哈希表(hashtable)：哈希表是一种数据结构 123456789101112131415class Solution &#123;public: vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) &#123; unordered_map&lt;int, int&gt; hashtable; for (int i = 0; i &lt; nums.size(); ++i) &#123; auto it = hashtable.find(target - nums[i]); if (it != hashtable.end()) &#123; return &#123;it-&gt;second, i&#125;; &#125; hashtable[nums[i]] = i; &#125; return &#123;&#125;; &#125;&#125;; it-&gt;first是健，这里是数组的元素it-&gt;second是值，这是是数组的索引。 遇到的问题：运行代码时通过列表初始化vector出错设置vs code支持c++11改command adapter设置https://www.jianshu.com/p/e1bc046edecc改code-runner配置https://blog.csdn.net/Littlelumos/article/details/130437532 可能是 mac 芯片&#x2F;系统 或者 code runner 参数问题，所以先找到 code runner 插件的配置设置，找到 cpp 文件的启动参数，下面省略： 1234567&quot;code-runner.executorMap&quot;: &#123; &quot;javascript&quot;: &quot;node&quot;, &quot;java&quot;: &quot;cd $dir &amp;&amp; javac $fileName &amp;&amp; java $fileNameWithoutExt&quot;, &quot;c&quot;: &quot;cd $dir &amp;&amp; gcc $fileName -o -std=c++11 -g $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;, &quot;zig&quot;: &quot;zig run&quot;, &quot;cpp&quot;: &quot;cd $dir &amp;&amp; g++ $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;, 将其中的 cpp (不是 c) 改成这样，加入 c++11 支持就可以了： 123&quot;cpp&quot;: &quot;cd $dir &amp;&amp; g++ $fileName -g -Wall -std=c++11 -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;,","categories":[],"tags":[{"name":"cpp","slug":"cpp","permalink":"https://boliulian.github.io/Boliulian/tags/cpp/"}]},{"title":"Hexo+github部署个人博客的流程","slug":"Hexo+github部署个人博客的流程","date":"2024-07-04T14:16:04.000Z","updated":"2024-08-17T10:34:00.952Z","comments":true,"path":"2024/07/04/Hexo+github部署个人博客的流程/","permalink":"https://boliulian.github.io/Boliulian/2024/07/04/Hexo+github%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%B5%81%E7%A8%8B/","excerpt":"1.下载node.js和npmnode.js包括了npm 1brew install node","text":"1.下载node.js和npmnode.js包括了npm 1brew install node 2.下载hexo1npm install -g hexo-cli 3.初始化blog123hexo init myblogcd myblognpm install 4.安装主题4.1 下载next1git clone https://github.com/iissnan/hexo-theme-next themes/next 4.2 配置_config.yml1theme: next 5.外部部署5.1 github准备github新建仓库，并将主分支设置为main 5.2 本地准备安装插件hexo-deployer-git 1npm install hexo-deployer-git --save 生成ssh key 123git config --global user.name &quot; &quot;git config --global user.email &quot; &quot;ssh-keygen -t rsa -C &quot; &quot; 将id_rsa.pub文件中的内容复制到仓库设置中，生成ssh key 5.3 两者连接修改\\_config.yml文件中的deploy和url 123456url: github page地址deploy: type: git repo: 仓库的ssh地址（http地址连不上 branch: main 6.提交内容123hexo ghexo shexo d","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://boliulian.github.io/Boliulian/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://boliulian.github.io/Boliulian/tags/github/"}]},{"title":"youtube-dl扒档方法","slug":"扒档方法","date":"2024-07-04T10:16:04.000Z","updated":"2024-08-17T10:34:00.949Z","comments":true,"path":"2024/07/04/扒档方法/","permalink":"https://boliulian.github.io/Boliulian/2024/07/04/%E6%89%92%E6%A1%A3%E6%96%B9%E6%B3%95/","excerpt":"‼️ mac可用downie4一键解决‼️‼️ win可用idm一键解决‼️其他：youtube-dl原链接：https://weibo.com/ttarticle/p/show?id=2309404603148240027963 方法是youtube-dl+ffmpeg","text":"‼️ mac可用downie4一键解决‼️‼️ win可用idm一键解决‼️其他：youtube-dl原链接：https://weibo.com/ttarticle/p/show?id=2309404603148240027963 方法是youtube-dl+ffmpeg youtube-dl从github找，用homebrew安装；ffmpeg是个可执行文件，从官网下 （我把ffmpeg放到usr&#x2F;local&#x2F;bin了 然后从原视频连接获取真实url，具体方法： 在Tver或者Gyao点开一个视频，右键-审查元素（或直接Ctrl+Shift+I，如果发现不让审查元素，可以先点开随便一个别的网页，提前点开审查元素，然后把tver的链接粘贴即可） Ctrl+f搜data-account，找到这个站点的数字 Ctrl+f搜data-video-id找到这个视频专属的数字 然后替换到底下这个链接里，即可http://players.brightcove.net/(data-account)/default_default/index.html?videoId=(data-video-id) 例： 1youtube-dl -f bestvideo+bestaudio http://players.brightcove.net/4394098882001/default_default/index.html\\?videoId\\=\\6356122004112","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"https://boliulian.github.io/Boliulian/tags/%E5%B7%A5%E5%85%B7/"}]}],"categories":[],"tags":[{"name":"日常","slug":"日常","permalink":"https://boliulian.github.io/Boliulian/tags/%E6%97%A5%E5%B8%B8/"},{"name":"チョコプラ","slug":"チョコプラ","permalink":"https://boliulian.github.io/Boliulian/tags/%E3%83%81%E3%83%A7%E3%82%B3%E3%83%97%E3%83%A9/"},{"name":"归档","slug":"归档","permalink":"https://boliulian.github.io/Boliulian/tags/%E5%BD%92%E6%A1%A3/"},{"name":"hexo","slug":"hexo","permalink":"https://boliulian.github.io/Boliulian/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://boliulian.github.io/Boliulian/tags/github/"},{"name":"cpp","slug":"cpp","permalink":"https://boliulian.github.io/Boliulian/tags/cpp/"},{"name":"工具","slug":"工具","permalink":"https://boliulian.github.io/Boliulian/tags/%E5%B7%A5%E5%85%B7/"}]}