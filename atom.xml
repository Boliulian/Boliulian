<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>榴莲的数字花园</title>
  
  <subtitle>灵魂会说话</subtitle>
  <link href="https://boliulian.github.io/Boliulian/atom.xml" rel="self"/>
  
  <link href="https://boliulian.github.io/Boliulian/"/>
  <updated>2024-07-06T09:19:15.233Z</updated>
  <id>https://boliulian.github.io/Boliulian/</id>
  
  <author>
    <name>Boliulian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>力扣题体验</title>
    <link href="https://boliulian.github.io/Boliulian/2024/07/05/%E5%8A%9B%E6%89%A3%E9%A2%98%E4%BD%93%E9%AA%8C/"/>
    <id>https://boliulian.github.io/Boliulian/2024/07/05/%E5%8A%9B%E6%89%A3%E9%A2%98%E4%BD%93%E9%AA%8C/</id>
    <published>2024-07-05T10:54:46.000Z</published>
    <updated>2024-07-06T09:19:15.233Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/">https://leetcode.cn/</a></p><h2 id="3-无重复的最长字符串（2024-07-06）"><a href="#3-无重复的最长字符串（2024-07-06）" class="headerlink" title="3.无重复的最长字符串（2024.07.06）"></a>3.无重复的最长字符串（2024.07.06）</h2><p>滑动窗口，左下标i，右下标j（界限为右边界），提取窗口内子串用<code>str.substr(i,j-i)</code><br>查找字符串中的某字符用<code>str.find</code> （找不到返回-1，一开始被gpt骗了，说是返回npos<br>发现字符重复后，清除重复字符以前的所有字符<br>注意字符串string和字符char不是同一种格式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> result=<span class="number">0</span>;</span><br><span class="line">        string str;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt; s.<span class="built_in">length</span>();j++)&#123;</span><br><span class="line">            str=s.<span class="built_in">substr</span>(i,j-i);</span><br><span class="line">            <span class="type">int</span> pos=str.<span class="built_in">find</span>(s[j]);</span><br><span class="line">            <span class="keyword">if</span> (pos != <span class="number">-1</span>)&#123;</span><br><span class="line">                str.<span class="built_in">erase</span>(<span class="number">0</span>,pos+<span class="number">1</span>);</span><br><span class="line">                i=i+pos+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            str +=s[j];</span><br><span class="line">            result=<span class="built_in">max</span>(result,j-i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>好不喜欢字符串…就是一种绝对能弄出来但不知道怎么更快的感觉<br>我还是喜欢不知道能不能弄出来，想大于做的任务</p><h2 id="2-两数相加（2024-07-06）"><a href="#2-两数相加（2024-07-06）" class="headerlink" title="2.两数相加（2024.07.06）"></a>2.两数相加（2024.07.06）</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 单向链表定义</span></span><br><span class="line"> <span class="keyword">struct</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line">     <span class="type">int</span> val;</span><br><span class="line">     ListNode *next;</span><br><span class="line">     <span class="built_in">ListNode</span>() : <span class="built_in">val</span>(<span class="number">0</span>), <span class="built_in">next</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">     <span class="built_in">ListNode</span>(<span class="type">int</span> x) : <span class="built_in">val</span>(x), <span class="built_in">next</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">     <span class="built_in">ListNode</span>(<span class="type">int</span> x, ListNode *next) : <span class="built_in">val</span>(x), <span class="built_in">next</span>(next) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>ListNode是结构体对象，节点存储的是指向下一节点的指针和节点的值。<br>l1,l2分别是指向链表头结点的指针<br>所以，头节点的值是<code>l1-&gt;val</code>，指向下一个节点的指针是<code>l1-&gt;next</code><br>引入滑动指针遍历整个链表，当前位数的值相加，超过十进位。<br><strong>滑动指针运算前需要判断非空!</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        ListNode* p=l1;</span><br><span class="line">        ListNode* q=l2;</span><br><span class="line">        ListNode* head=<span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        ListNode* current=head;</span><br><span class="line">        ListNode* l3;</span><br><span class="line">        <span class="type">int</span> N1=<span class="number">0</span>,N2=<span class="number">0</span>,n1=<span class="number">0</span>,n2=<span class="number">0</span>,extra=<span class="number">0</span>,x,y;</span><br><span class="line">        <span class="keyword">while</span> (p!=<span class="literal">nullptr</span> || q!=<span class="literal">nullptr</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (p!=<span class="literal">nullptr</span>) x=p-&gt;val;</span><br><span class="line">            <span class="keyword">else</span> x=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (q!=<span class="literal">nullptr</span>) y=q-&gt;val;</span><br><span class="line">            <span class="keyword">else</span> y=<span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> sum=x+y+extra;</span><br><span class="line">            extra=sum/<span class="number">10</span>;</span><br><span class="line">            current-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(sum%<span class="number">10</span>);</span><br><span class="line">            current=current-&gt;next;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (p != <span class="literal">nullptr</span>) p = p-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (q != <span class="literal">nullptr</span>) q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (extra &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        current-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(extra);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l3=head-&gt;next;</span><br><span class="line"></span><br><span class="line">        &#125;        </span><br><span class="line"></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><h2 id="1-两数之和（2024-07-05）"><a href="#1-两数之和（2024-07-05）" class="headerlink" title="1.两数之和（2024.07.05）"></a>1.两数之和（2024.07.05）</h2><p>我的答案，暴力循环：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">twoSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i] + nums[j] == target) &#123;</span><br><span class="line">                    <span class="keyword">return</span> &#123;i, j&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span>   <p>vector&lt;int&gt; 动态数组<br>++i是前置递增，i++是后置递增</p><p>官方答案，用到概念哈希表(hashtable)：<br>哈希表是一种数据结构</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">twoSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; hashtable;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">            <span class="keyword">auto</span> it = hashtable.<span class="built_in">find</span>(target - nums[i]);</span><br><span class="line">            <span class="keyword">if</span> (it != hashtable.<span class="built_in">end</span>()) &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;it-&gt;second, i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            hashtable[nums[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>it-&gt;first是健，这里是数组的元素<br>it-&gt;second是值，这是是数组的索引。</p><h5 id="遇到的问题：运行代码时通过列表初始化vector出错"><a href="#遇到的问题：运行代码时通过列表初始化vector出错" class="headerlink" title="遇到的问题：运行代码时通过列表初始化vector出错"></a>遇到的问题：运行代码时通过列表初始化vector出错</h5><p>设置vs code支持c++11<br>改command adapter设置<br><a href="https://www.jianshu.com/p/e1bc046edecc">https://www.jianshu.com/p/e1bc046edecc</a><br>改code-runner配置<br><a href="https://blog.csdn.net/Littlelumos/article/details/130437532">https://blog.csdn.net/Littlelumos/article/details/130437532</a></p><p>可能是 mac 芯片&#x2F;系统 或者 code runner 参数问题，所以先找到 code runner 插件的配置设置，找到 cpp 文件的启动参数，下面省略：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">&quot;code-runner.executorMap&quot;:</span> &#123;</span><br><span class="line">  <span class="attr">&quot;javascript&quot;:</span> <span class="string">&quot;node&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;java&quot;:</span> <span class="string">&quot;cd $dir &amp;&amp; javac $fileName &amp;&amp; java $fileNameWithoutExt&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;c&quot;:</span> <span class="string">&quot;cd $dir &amp;&amp; gcc $fileName -o -std=c++11 -g $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;zig&quot;:</span> <span class="string">&quot;zig run&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;cpp&quot;:</span> <span class="string">&quot;cd $dir &amp;&amp; g++ $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;</span>,</span><br></pre></td></tr></table></figure><p>将其中的 cpp (不是 c) 改成这样，加入 c++11 支持就可以了：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">&quot;cpp&quot;:</span> <span class="string">&quot;cd $dir &amp;&amp; g++ $fileName -g -Wall -std=c++11 -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;</span><span class="string">,</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://leetcode.cn/&quot;&gt;https://leetcode.cn/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-无重复的最长字符串（2024-07-06）&quot;&gt;&lt;a href=&quot;#3-无重复的最长字符串（2024-07-06）&quot; class=&quot;headerlink&quot; title=&quot;3.无重复的最长字符串（2024.07.06）&quot;&gt;&lt;/a&gt;3.无重复的最长字符串（2024.07.06）&lt;/h2&gt;&lt;p&gt;滑动窗口，左下标i，右下标j（界限为右边界），提取窗口内子串用&lt;code&gt;str.substr(i,j-i)&lt;/code&gt;&lt;br&gt;查找字符串中的某字符用&lt;code&gt;str.find&lt;/code&gt; （找不到返回-1，一开始被gpt骗了，说是返回npos&lt;br&gt;发现字符重复后，清除重复字符以前的所有字符&lt;br&gt;注意字符串string和字符char不是同一种格式&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Solution&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;lengthOfLongestSubstring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; result=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j&amp;lt; s.&lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;();j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            str=s.&lt;span class=&quot;built_in&quot;&gt;substr&lt;/span&gt;(i,j-i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; pos=str.&lt;span class=&quot;built_in&quot;&gt;find&lt;/span&gt;(s[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pos != &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                str.&lt;span class=&quot;built_in&quot;&gt;erase&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,pos+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i=i+pos+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            str +=s[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result=&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(result,j-i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;好不喜欢字符串…就是一种绝对能弄出来但不知道怎么更快的感觉&lt;br&gt;我还是喜欢不知道能不能弄出来，想大于做的任务&lt;/p&gt;
&lt;h2 id=&quot;2-两数相加（2024-07-06）&quot;&gt;&lt;a href=&quot;#2-两数相加（2024-07-06）&quot; class=&quot;headerlink&quot; title=&quot;2.两数相加（2024.07.06）&quot;&gt;&lt;/a&gt;2.两数相加（2024.07.06）&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 单向链表定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;ListNode&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ListNode *next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;ListNode&lt;/span&gt;() : &lt;span class=&quot;built_in&quot;&gt;val&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;next&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;ListNode&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; x) : &lt;span class=&quot;built_in&quot;&gt;val&lt;/span&gt;(x), &lt;span class=&quot;built_in&quot;&gt;next&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;ListNode&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; x, ListNode *next) : &lt;span class=&quot;built_in&quot;&gt;val&lt;/span&gt;(x), &lt;span class=&quot;built_in&quot;&gt;next&lt;/span&gt;(next) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;ListNode是结构体对象，节点存储的是指向下一节点的指针和节点的值。&lt;br&gt;l1,l2分别是指向链表头结点的指针&lt;br&gt;所以，头节点的值是&lt;code&gt;l1-&amp;gt;val&lt;/code&gt;，指向下一个节点的指针是&lt;code&gt;l1-&amp;gt;next&lt;/code&gt;&lt;br&gt;引入滑动指针遍历整个链表，当前位数的值相加，超过十进位。&lt;br&gt;&lt;strong&gt;滑动指针运算前需要判断非空!&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Solution&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ListNode* &lt;span class=&quot;title&quot;&gt;addTwoNumbers&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ListNode* l1, ListNode* l2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListNode* p=l1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListNode* q=l2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListNode* head=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;ListNode&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListNode* current=head;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListNode* l3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; N1=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,N2=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,n1=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,n2=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,extra=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,x,y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (p!=&lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt; || q!=&lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p!=&lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;) x=p-&amp;gt;val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; x=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (q!=&lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;) y=q-&amp;gt;val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; y=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; sum=x+y+extra;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            extra=sum/&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            current-&amp;gt;next = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;ListNode&lt;/span&gt;(sum%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            current=current-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p != &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;) p = p-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (q != &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;) q = q-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (extra &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        current-&amp;gt;next = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;ListNode&lt;/span&gt;(extra);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; l3=head-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h2 id=&quot;1-两数之和（2024-07-05）&quot;&gt;&lt;a href=&quot;#1-两数之和（2024-07-05）&quot; class=&quot;headerlink&quot; title=&quot;1.两数之和（2024.07.05）&quot;&gt;&lt;/a&gt;1.两数之和（2024.07.05）&lt;/h2&gt;&lt;p&gt;我的答案，暴力循环：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Solution&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;vector&amp;lt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;&amp;gt; &lt;span class=&quot;title&quot;&gt;twoSum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(vector&amp;lt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums, &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; target)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; n = nums.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; j = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt; n; ++j) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[i] + nums[j] == target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;i, j&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="cpp" scheme="https://boliulian.github.io/Boliulian/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+github部署个人博客的流程</title>
    <link href="https://boliulian.github.io/Boliulian/2024/07/04/Hexo+github%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%B5%81%E7%A8%8B/"/>
    <id>https://boliulian.github.io/Boliulian/2024/07/04/Hexo+github%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%B5%81%E7%A8%8B/</id>
    <published>2024-07-04T14:16:04.000Z</published>
    <updated>2024-07-04T15:11:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-下载node-js和npm"><a href="#1-下载node-js和npm" class="headerlink" title="1.下载node.js和npm"></a>1.下载node.js和npm</h2><p>node.js包括了npm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><span id="more"></span>   <h2 id="2-下载hexo"><a href="#2-下载hexo" class="headerlink" title="2.下载hexo"></a>2.下载hexo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="3-初始化blog"><a href="#3-初始化blog" class="headerlink" title="3.初始化blog"></a>3.初始化blog</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br><span class="line">cd myblog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="4-安装主题"><a href="#4-安装主题" class="headerlink" title="4.安装主题"></a>4.安装主题</h2><h3 id="4-1-下载next"><a href="#4-1-下载next" class="headerlink" title="4.1 下载next"></a>4.1 下载next</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="4-2-配置-config-yml"><a href="#4-2-配置-config-yml" class="headerlink" title="4.2 配置_config.yml"></a>4.2 配置_config.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><h2 id="5-外部部署"><a href="#5-外部部署" class="headerlink" title="5.外部部署"></a>5.外部部署</h2><h3 id="5-1-github准备"><a href="#5-1-github准备" class="headerlink" title="5.1 github准备"></a>5.1 github准备</h3><p>github新建仓库<my_repository>，并将主分支设置为main</p><h3 id="5-2-本地准备"><a href="#5-2-本地准备" class="headerlink" title="5.2 本地准备"></a>5.2 本地准备</h3><p>安装插件hexo-deployer-git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>生成ssh key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot; &quot;</span><br><span class="line">git config --global user.email &quot; &quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot; &quot;</span><br></pre></td></tr></table></figure><p>将<code>id_rsa.pub</code>文件中的内容复制到仓库设置中，生成ssh key</p><h3 id="5-3-两者连接"><a href="#5-3-两者连接" class="headerlink" title="5.3 两者连接"></a>5.3 两者连接</h3><p>修改<code>\_config.yml</code>文件中的deploy和url</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">github</span> <span class="string">page地址</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">仓库的ssh地址（http地址连不上</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><h2 id="6-提交内容"><a href="#6-提交内容" class="headerlink" title="6.提交内容"></a>6.提交内容</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-下载node-js和npm&quot;&gt;&lt;a href=&quot;#1-下载node-js和npm&quot; class=&quot;headerlink&quot; title=&quot;1.下载node.js和npm&quot;&gt;&lt;/a&gt;1.下载node.js和npm&lt;/h2&gt;&lt;p&gt;node.js包括了npm&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install node&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://boliulian.github.io/Boliulian/tags/hexo/"/>
    
    <category term="github" scheme="https://boliulian.github.io/Boliulian/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>自欺欺人第一名</title>
    <link href="https://boliulian.github.io/Boliulian/2024/07/04/%E8%87%AA%E6%AC%BA%E6%AC%BA%E4%BA%BA%E7%AC%AC%E4%B8%80%E5%90%8D/"/>
    <id>https://boliulian.github.io/Boliulian/2024/07/04/%E8%87%AA%E6%AC%BA%E6%AC%BA%E4%BA%BA%E7%AC%AC%E4%B8%80%E5%90%8D/</id>
    <published>2024-07-04T10:33:46.000Z</published>
    <updated>2024-07-04T14:44:41.635Z</updated>
    
    <content type="html"><![CDATA[<p>比惨可耻但有用：</p><span id="more"></span>   <p>① 成果很好但毕业了半年才找到博后的<br><a href="http://xhslink.com/ywsCnO">点击比惨</a><br>② 6月毕业还没工作的，以及去年6月毕业还没工作的<br> <a href="http://xhslink.com/pHmmrO">点击比惨</a><br>③ 专业不对口也不是没可能转行的<br><a href="http://xhslink.com/qn4mrO">点击比惨</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;比惨可耻但有用：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>youtube-dl扒档方法</title>
    <link href="https://boliulian.github.io/Boliulian/2024/07/04/youtube-dl%E6%89%92%E6%A1%A3%E6%96%B9%E6%B3%95/"/>
    <id>https://boliulian.github.io/Boliulian/2024/07/04/youtube-dl%E6%89%92%E6%A1%A3%E6%96%B9%E6%B3%95/</id>
    <published>2024-07-04T10:16:04.000Z</published>
    <updated>2024-07-06T14:17:26.368Z</updated>
    
    <content type="html"><![CDATA[<p>好人提供的扒档教程，原链接：<a href="https://weibo.com/ttarticle/p/show?id=2309404603148240027963">https://weibo.com/ttarticle/p/show?id=2309404603148240027963</a></p><p><strong>方法是youtube-dl+ffmpeg</strong></p><span id="more"></span>   <p>youtube-dl从github找，用homebrew安装；ffmpeg是个可执行文件，从官网下</p><p>（我把ffmpeg放到usr&#x2F;local&#x2F;bin了</p><p>然后从原视频连接获取真实url，具体方法：</p><blockquote><p>在Tver或者Gyao点开一个视频，右键-审查元素（或直接Ctrl+Shift+I，如果发现不让审查元素，可以先点开随便一个别的网页，提前点开审查元素，然后把tver的链接粘贴即可）</p><p>Ctrl+f搜data-account，找到这个站点的数字</p><p>Ctrl+f搜data-video-id找到这个视频专属的数字</p><p>然后替换到底下这个链接里，即可<br><a href="http://players.brightcove.net/(data-account)/default_default/index.html?videoId=(data-video-id)">http://players.brightcove.net/(data-account)/default_default/index.html?videoId=(data-video-id)</a></p></blockquote><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl -f bestvideo+bestaudio http://players.brightcove.net/4394098882001/default_default/index.html\?videoId\=\6356122004112</span><br><span class="line"></span><br><span class="line">youtube-dl -f bestvideo+bestaudio http://players.brightcove.net/4031511847001/default_default/index.html\?videoId\=\6356257443112</span><br><span class="line"></span><br><span class="line">youtube-dl -f bestvideo+bestaudio http://players.brightcove.net/6191645753001/default_default/index.html\?videoId\=\6356789936112</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;好人提供的扒档教程，原链接：&lt;a href=&quot;https://weibo.com/ttarticle/p/show?id=2309404603148240027963&quot;&gt;https://weibo.com/ttarticle/p/show?id=2309404603148240027963&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法是youtube-dl+ffmpeg&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>精神就存放在这里</title>
    <link href="https://boliulian.github.io/Boliulian/2024/07/03/%E7%B2%BE%E7%A5%9E%E5%B0%B1%E5%AD%98%E6%94%BE%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    <id>https://boliulian.github.io/Boliulian/2024/07/03/%E7%B2%BE%E7%A5%9E%E5%B0%B1%E5%AD%98%E6%94%BE%E5%9C%A8%E8%BF%99%E9%87%8C/</id>
    <published>2024-07-03T11:13:30.000Z</published>
    <updated>2024-07-04T14:44:38.304Z</updated>
    
    <content type="html"><![CDATA[<p>只要结果，不问过程。原来不仅是读博，我的人生也一直是这样被隐形要求的，只不过时间尺度拉得太长，到今天交不出成果了才意识到。</p><span id="more"></span>   <p>别谈什么哲学就是求真了，这个现实世界没有真的东西，真只存在于精神里，是不可说的东西。哲学是自己和世界的关系，也不是可以说的东西。从今天起，闭口不谈。</p><p>28岁了才明白并没有无条件的爱。</p><p>回顾人生犯的错误，大概最主要一条就是在不正确的年龄拥有了不属于自己阶层的价值观。</p><p>你没有时间和资格悲伤，现在需要做的是纠正以前的错误，晚了也不晚。不能说晚，承认晚了就彻底玩完了。</p><p>其实是隐隐预料到会有这么一天的，但总抱有一丝侥幸，觉得我是不是可以晚一点，再晚一点，或者不去被同化。拖到现在已经是极限了。这一年来也出现了很多征兆，比如ldh出现的问题，入坑了お笑い，和高中同学的问题，和课题组的问题，和奶奶和姑姑的问题，还有室友说的你会离开这里的。</p><p>长出精神是原罪。我突然同情起了复旦那位天龙人，并没有可比性，只是说现实的人不能有精神。精神在心中，不在语言，不在行为。精神不死，灵魂不死，肉身也可以不死。</p><p>作为不死的证明，今后精神就存放在这里。这个地方大概就是为了这一天准备的。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;只要结果，不问过程。原来不仅是读博，我的人生也一直是这样被隐形要求的，只不过时间尺度拉得太长，到今天交不出成果了才意识到。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
